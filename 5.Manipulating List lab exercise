ex1) Inner workings of list:

The Python code in the script already creates a list with the name areas and a copy named areas_copy. 
Next, the first element in the areas_copy list is changed and the areas list is printed out. 

# Create list areas
areas = [11.25, 18.0, 20.0, 10.75, 9.50]

# Create areas_copy
areas_copy = areas

# Change areas_copy
areas_copy[0] = 5.0

# Print areas
print(areas)

Output:
<script.py> output:
    [5.0, 18.0, 20.0, 10.75, 9.5]
    
    although you've changed areas_copy, the change also takes effect in the areas list. 
    That's because areas and areas_copy point to the same list.
    
to prevent changes in areas_copy to also take effect in areas, you'll have to do a more explicit copy of the areas list.
You can do this with list() or by using [:].

eg.
# Create list areas
areas = [11.25, 18.0, 20.0, 10.75, 9.50]

# Create areas_copy
areas_copy = list(areas)
  # or use areas_copy = areas[:]
# Change areas_copy
areas_copy[0] = 5.0

# Print areas
print(areas)

Output:
<script.py> output:
    [11.25, 18.0, 20.0, 10.75, 9.5]
    
    Now, changes made to areas_copy shouldn't affect areas
